// Code generated by protoc-gen-go. DO NOT EDIT.
// source: preorderval/validator.proto

package validator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	common "github.com/hyperledger/fabric/protos/common"
	peer "github.com/hyperledger/fabric/protos/peer"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SysCC struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	InvokableCC2CC       bool     `protobuf:"varint,2,opt,name=InvokableCC2CC,proto3" json:"InvokableCC2CC,omitempty"`
	InvokableExternal    bool     `protobuf:"varint,3,opt,name=InvokableExternal,proto3" json:"InvokableExternal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SysCC) Reset()         { *m = SysCC{} }
func (m *SysCC) String() string { return proto.CompactTextString(m) }
func (*SysCC) ProtoMessage()    {}
func (*SysCC) Descriptor() ([]byte, []int) {
	return fileDescriptor_89dbd1ce0fcdf9f4, []int{0}
}

func (m *SysCC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SysCC.Unmarshal(m, b)
}
func (m *SysCC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SysCC.Marshal(b, m, deterministic)
}
func (m *SysCC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SysCC.Merge(m, src)
}
func (m *SysCC) XXX_Size() int {
	return xxx_messageInfo_SysCC.Size(m)
}
func (m *SysCC) XXX_DiscardUnknown() {
	xxx_messageInfo_SysCC.DiscardUnknown(m)
}

var xxx_messageInfo_SysCC proto.InternalMessageInfo

func (m *SysCC) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SysCC) GetInvokableCC2CC() bool {
	if m != nil {
		return m.InvokableCC2CC
	}
	return false
}

func (m *SysCC) GetInvokableExternal() bool {
	if m != nil {
		return m.InvokableExternal
	}
	return false
}

type Chain struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_89dbd1ce0fcdf9f4, []int{1}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CCDef struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CCDef) Reset()         { *m = CCDef{} }
func (m *CCDef) String() string { return proto.CompactTextString(m) }
func (*CCDef) ProtoMessage()    {}
func (*CCDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_89dbd1ce0fcdf9f4, []int{2}
}

func (m *CCDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CCDef.Unmarshal(m, b)
}
func (m *CCDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CCDef.Marshal(b, m, deterministic)
}
func (m *CCDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CCDef.Merge(m, src)
}
func (m *CCDef) XXX_Size() int {
	return xxx_messageInfo_CCDef.Size(m)
}
func (m *CCDef) XXX_DiscardUnknown() {
	xxx_messageInfo_CCDef.DiscardUnknown(m)
}

var xxx_messageInfo_CCDef proto.InternalMessageInfo

func (m *CCDef) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type Result struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_89dbd1ce0fcdf9f4, []int{3}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

type ValidationResult struct {
	Code                 peer.TxValidationCode `protobuf:"varint,1,opt,name=Code,proto3,enum=protos.TxValidationCode" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ValidationResult) Reset()         { *m = ValidationResult{} }
func (m *ValidationResult) String() string { return proto.CompactTextString(m) }
func (*ValidationResult) ProtoMessage()    {}
func (*ValidationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_89dbd1ce0fcdf9f4, []int{4}
}

func (m *ValidationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ValidationResult.Unmarshal(m, b)
}
func (m *ValidationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ValidationResult.Marshal(b, m, deterministic)
}
func (m *ValidationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidationResult.Merge(m, src)
}
func (m *ValidationResult) XXX_Size() int {
	return xxx_messageInfo_ValidationResult.Size(m)
}
func (m *ValidationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidationResult.DiscardUnknown(m)
}

var xxx_messageInfo_ValidationResult proto.InternalMessageInfo

func (m *ValidationResult) GetCode() peer.TxValidationCode {
	if m != nil {
		return m.Code
	}
	return peer.TxValidationCode_VALID
}

func init() {
	proto.RegisterType((*SysCC)(nil), "preorderval.SysCC")
	proto.RegisterType((*Chain)(nil), "preorderval.Chain")
	proto.RegisterType((*CCDef)(nil), "preorderval.CCDef")
	proto.RegisterType((*Result)(nil), "preorderval.Result")
	proto.RegisterType((*ValidationResult)(nil), "preorderval.ValidationResult")
}

func init() {
	proto.RegisterFile("preorderval/validator.proto", fileDescriptor_89dbd1ce0fcdf9f4)
}

var fileDescriptor_89dbd1ce0fcdf9f4 = []byte{
	// 313 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0x57, 0xdd, 0x46, 0xf7, 0x29, 0x63, 0xcb, 0x40, 0x4a, 0x87, 0x30, 0x7a, 0x90, 0x1d,
	0x46, 0x07, 0x13, 0xbd, 0x09, 0x42, 0xdc, 0xc1, 0x8b, 0x87, 0x4e, 0xbc, 0x67, 0xeb, 0x27, 0x16,
	0xb3, 0xa4, 0xa6, 0xb1, 0xcc, 0xff, 0xdc, 0xa3, 0x34, 0x89, 0xba, 0x56, 0x77, 0x6a, 0xf8, 0xbd,
	0xf7, 0xda, 0xbe, 0x17, 0x18, 0xe7, 0x0a, 0xa5, 0x4a, 0x51, 0x95, 0x8c, 0xcf, 0x4b, 0xc6, 0xb3,
	0x94, 0x69, 0xa9, 0xe2, 0x5c, 0x49, 0x2d, 0xc9, 0xc9, 0x9e, 0x18, 0x8e, 0x36, 0x72, 0xbb, 0x95,
	0x62, 0x6e, 0x1f, 0xd6, 0x11, 0x9e, 0xe5, 0x88, 0x6a, 0xae, 0x15, 0x13, 0x05, 0xdb, 0xe8, 0xec,
	0x9b, 0x47, 0x6f, 0xd0, 0x59, 0x7d, 0x14, 0x94, 0x12, 0x02, 0xed, 0x07, 0xb6, 0xc5, 0xc0, 0x9b,
	0x78, 0xd3, 0x5e, 0x62, 0xce, 0xe4, 0x02, 0xfa, 0xf7, 0xa2, 0x94, 0xaf, 0x6c, 0xcd, 0x91, 0xd2,
	0x05, 0xa5, 0xc1, 0xd1, 0xc4, 0x9b, 0xfa, 0x49, 0x83, 0x92, 0x19, 0x0c, 0x7f, 0xc8, 0x72, 0xa7,
	0x51, 0x09, 0xc6, 0x83, 0x63, 0x63, 0xfd, 0x2b, 0x44, 0x63, 0xe8, 0xd0, 0x17, 0x96, 0x89, 0xff,
	0x3e, 0x69, 0x44, 0x7a, 0x87, 0xcf, 0x95, 0x98, 0x32, 0xcd, 0x8c, 0x78, 0x9a, 0x98, 0x73, 0xe4,
	0x43, 0x37, 0xc1, 0xe2, 0x9d, 0xeb, 0xe8, 0x16, 0x06, 0x4f, 0x76, 0x83, 0x4c, 0x0a, 0xcb, 0xc8,
	0x0c, 0xda, 0x54, 0xa6, 0xf6, 0x75, 0xfd, 0x45, 0x60, 0x0b, 0x16, 0xf1, 0xe3, 0xee, 0xd7, 0x59,
	0xe9, 0x89, 0x71, 0x2d, 0x3e, 0x3d, 0x18, 0xee, 0xad, 0x66, 0xe7, 0x24, 0x57, 0xe0, 0xaf, 0x50,
	0xbb, 0x45, 0xe2, 0x3d, 0x3d, 0x36, 0x2c, 0x1c, 0xd5, 0x98, 0xfb, 0x99, 0x96, 0x8b, 0xb9, 0x56,
	0x35, 0x8b, 0x61, 0x87, 0x62, 0xd7, 0xd0, 0xab, 0x62, 0x55, 0xdf, 0xa2, 0x99, 0xab, 0xe0, 0xa1,
	0xdc, 0x0d, 0xf8, 0xae, 0x13, 0x92, 0x41, 0xec, 0xee, 0x79, 0x29, 0x4a, 0xe4, 0x32, 0xc7, 0xf0,
	0xbc, 0x16, 0x6a, 0xce, 0x14, 0xb5, 0xd6, 0x5d, 0xb3, 0xcc, 0xe5, 0x57, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x8d, 0xdc, 0xb9, 0xfa, 0x53, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PreordervalidatorClient is the client API for Preordervalidator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PreordervalidatorClient interface {
	SetSysCC(ctx context.Context, in *SysCC, opts ...grpc.CallOption) (*Result, error)
	SetChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*Result, error)
	SetCCDefs(ctx context.Context, in *CCDef, opts ...grpc.CallOption) (*Result, error)
	Validate(ctx context.Context, in *common.Envelope, opts ...grpc.CallOption) (*ValidationResult, error)
}

type preordervalidatorClient struct {
	cc *grpc.ClientConn
}

func NewPreordervalidatorClient(cc *grpc.ClientConn) PreordervalidatorClient {
	return &preordervalidatorClient{cc}
}

func (c *preordervalidatorClient) SetSysCC(ctx context.Context, in *SysCC, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/preorderval.preordervalidator/SetSysCC", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *preordervalidatorClient) SetChain(ctx context.Context, in *Chain, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/preorderval.preordervalidator/SetChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *preordervalidatorClient) SetCCDefs(ctx context.Context, in *CCDef, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/preorderval.preordervalidator/SetCCDefs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *preordervalidatorClient) Validate(ctx context.Context, in *common.Envelope, opts ...grpc.CallOption) (*ValidationResult, error) {
	out := new(ValidationResult)
	err := c.cc.Invoke(ctx, "/preorderval.preordervalidator/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PreordervalidatorServer is the server API for Preordervalidator service.
type PreordervalidatorServer interface {
	SetSysCC(context.Context, *SysCC) (*Result, error)
	SetChain(context.Context, *Chain) (*Result, error)
	SetCCDefs(context.Context, *CCDef) (*Result, error)
	Validate(context.Context, *common.Envelope) (*ValidationResult, error)
}

// UnimplementedPreordervalidatorServer can be embedded to have forward compatible implementations.
type UnimplementedPreordervalidatorServer struct {
}

func (*UnimplementedPreordervalidatorServer) SetSysCC(ctx context.Context, req *SysCC) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSysCC not implemented")
}
func (*UnimplementedPreordervalidatorServer) SetChain(ctx context.Context, req *Chain) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetChain not implemented")
}
func (*UnimplementedPreordervalidatorServer) SetCCDefs(ctx context.Context, req *CCDef) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCCDefs not implemented")
}
func (*UnimplementedPreordervalidatorServer) Validate(ctx context.Context, req *common.Envelope) (*ValidationResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}

func RegisterPreordervalidatorServer(s *grpc.Server, srv PreordervalidatorServer) {
	s.RegisterService(&_Preordervalidator_serviceDesc, srv)
}

func _Preordervalidator_SetSysCC_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SysCC)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreordervalidatorServer).SetSysCC(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preorderval.preordervalidator/SetSysCC",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreordervalidatorServer).SetSysCC(ctx, req.(*SysCC))
	}
	return interceptor(ctx, in, info, handler)
}

func _Preordervalidator_SetChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Chain)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreordervalidatorServer).SetChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preorderval.preordervalidator/SetChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreordervalidatorServer).SetChain(ctx, req.(*Chain))
	}
	return interceptor(ctx, in, info, handler)
}

func _Preordervalidator_SetCCDefs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CCDef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreordervalidatorServer).SetCCDefs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preorderval.preordervalidator/SetCCDefs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreordervalidatorServer).SetCCDefs(ctx, req.(*CCDef))
	}
	return interceptor(ctx, in, info, handler)
}

func _Preordervalidator_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Envelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreordervalidatorServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preorderval.preordervalidator/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreordervalidatorServer).Validate(ctx, req.(*common.Envelope))
	}
	return interceptor(ctx, in, info, handler)
}

var _Preordervalidator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "preorderval.preordervalidator",
	HandlerType: (*PreordervalidatorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetSysCC",
			Handler:    _Preordervalidator_SetSysCC_Handler,
		},
		{
			MethodName: "SetChain",
			Handler:    _Preordervalidator_SetChain_Handler,
		},
		{
			MethodName: "SetCCDefs",
			Handler:    _Preordervalidator_SetCCDefs_Handler,
		},
		{
			MethodName: "Validate",
			Handler:    _Preordervalidator_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "preorderval/validator.proto",
}
