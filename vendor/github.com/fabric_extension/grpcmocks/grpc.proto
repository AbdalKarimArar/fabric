syntax = "proto3";

import "protos/common/common.proto";

package grpcmocks;

service Crypto {
    rpc Verify (Transaction) returns (Result) {    }
    rpc CompareHash (CompareMessage) returns (Result){}
}

service Storage {
    rpc Store(common.Block) returns (Result) {    }
    rpc CreateLedger(common.Block) returns (Result) {    }
    rpc Init(EndorseInit) returns (common.Envelope){}
    rpc Endorse(Transfer) returns (common.Envelope){}
    rpc QueryBalances(Accounts) returns (Balances){}
}

message Transaction {
    bytes Creator = 1;
    bytes Data = 2;
    bytes Signature = 3;
    string ChainID = 4;
}

message Result {
}

message CompareMessage{
    bytes ChannelHdr=1;
    bytes ActionHdr=2;
    bytes ProposalPayload=3;
    bytes ProposalHash=4;
}

message Envelopes{
    repeated bytes Envs=1;
}

message EndorseInit{
    map<string,int32> initBalances = 1;
}

message Transfer{
    string from=1;
    string to=2;
    int32 amount=3;
}

message Accounts{
    repeated string accs=1;
}

message Balances{
    repeated int32 bal=1;
}